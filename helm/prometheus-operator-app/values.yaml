prometheus-operator-app:
  global:
    imageRegistry: docker.io
    rbac:
      create: true
      pspEnabled: true
  alertmanager:
    alertmanagerSpec:
      image:
        repository: giantswarm/alertmanager
    ingress:
      ingressClassName: nginx
      pathType: ImplementationSpecific
    ingressPerReplica:
      ingressClassName: nginx
      pathType: ImplementationSpecific
  coreDns:
    enabled: true
    # This PR fixes the coredns service as we use the `k8s-app: coredns` label
    service:
      selector:
        k8s-app: coredns
  grafana:
    enabled: true
    rbac:
      pspEnabled: true
      pspUseAppArmor: false
    ingress:
      ingressClassName: nginx
  kubeApiServer:
    enabled: true
  kubelet:
    enabled: true
  kubeControllerManager:
    enabled: true
  kubeEtcd:
    enabled: true
  kubeProxy:
    enabled: true
  kubeScheduler:
    enabled: true
  kubeStateMetrics:
    enabled: false
  kube-state-metrics:
    verticalPodAutoscaler:
      enabled: true
    networkPolicy:
      enabled: true
      egress:
      - {}
      ingress:
      - {}
  nodeExporter:
    enabled: true
  prometheus-node-exporter:
    ## Blocked by those 2
    disableConntrackCollector: false
    disableNvmeCollector: false
    extraArgs:
    - '--log.level=info'
    - '--collector.arp'
    - '--collector.bcache'
    - '--collector.conntrack'
    - '--collector.cpu'
    - '--collector.diskstats'
    - '--collector.edac'
    - '--collector.entropy'
    - '--collector.ethtool'
    - '--collector.filefd'
    - '--collector.filesystem'
    - '--collector.filesystem.mount-points-exclude=boot'
    - '--collector.hwmon'
    - '--collector.loadavg'
    - '--collector.mdadm'
    - '--collector.meminfo'
    - '--collector.netdev'
    - '--collector.netstat'
    - '--collector.sockstat'
    - '--collector.stat'
    - '--collector.systemd'
    - '--collector.time'
    - '--collector.timex'
    - '--collector.uname'
    - '--collector.vmstat'
    - '--collector.xfs'
    - '--no-collector.btrfs'
    - '--no-collector.infiniband'
    - '--no-collector.ipvs'
    - '--no-collector.powersupplyclass'
    - '--no-collector.rapl'
    - '--no-collector.schedstat'
    - '--no-collector.softnet'
    - '--no-collector.textfile'
    - '--no-collector.thermal_zone'
    - '--no-collector.udp_queues'
    - '--no-collector.wifi'
    - '--no-collector.zfs'
    - '--no-collector.tapestats'
    - '--no-collector.fibrechannel'
    extraHostVolumeMounts:
    - name: dbus
      hostPath: /var/run/dbus
      mountPath: /var/run/dbus
      readOnly: true
      mountPropagation: HostToContainer
    - name: systemd
      hostPath: /run/systemd
      mountPath: /run/systemd
      readOnly: true
      mountPropagation: HostToContainer
    image:
      repository: giantswarm/node-exporter
    priorityClassName: system-node-critical
    rbac:
      pspEnabled: true
    resources:
      limits:
        cpu: 50m
        memory: 50Mi
      requests:
        cpu: 50m
        memory: 50Mi
    verticalPodAutoscaler:
      enabled: true
  prometheus:
    enabled: true
    prometheusSpec:
      image:
        repository: giantswarm/prometheus
    ingress:
      ingressClassName: nginx
      pathType: ImplementationSpecific
    ingressPerReplica:
      ingressClassName: nginx
      pathType: ImplementationSpecific
    thanosIngress:
      ingressClassName: nginx
      pathType: ImplementationSpecific
  prometheusOperator:
    enabled: true
    admissionWebhooks:
      patch:
        image:
          # We have 2 images for this: https://github.com/giantswarm/retagger/blob/dc815cbec228a32d7dc1859e6e3c73bef5488b52/images.yaml#L1069 and https://github.com/giantswarm/retagger/blob/dc815cbec228a32d7dc1859e6e3c73bef5488b52/images.yaml#L513
          # The jettech one is old and does not work with Kubernetes 1.22. We need to deprecate it later.
          repository: giantswarm/ingress-nginx-kube-webhook-certgen
    alertmanagerDefaultBaseImage: giantswarm/alertmanager
    image:
      repository: giantswarm/prometheus-operator
    labels:
      giantswarm.io/monitoring_basic_sli: "true"
    prometheusConfigReloader:
      image:
        repository: giantswarm/prometheus-config-reloader
    prometheusDefaultBaseImage: giantswarm/prometheus
    networkPolicy:
      enabled: true
    secretFieldSelector: "type!=helm.sh/release.v1"
    thanosImage:
      repository: giantswarm/thanos
    verticalPodAutoscaler:
      enabled: true
  thanosRuler:
    enabled: false
    thanosRulerSpec:
      image:
        repository: giantswarm/thanos
    ingress:
      ingressClassName: nginx
      pathType: ImplementationSpecific
