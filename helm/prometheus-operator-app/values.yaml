prometheus-operator-app:
  global:
    imageRegistry: docker.io
    rbac:
      create: true
      pspEnabled: true
  alertmanager:
    alertmanagerSpec:
      image:
        repository: giantswarm/alertmanager
    ingress:
      ingressClassName: nginx
      pathType: ImplementationSpecific
    ingressPerReplica:
      ingressClassName: nginx
      pathType: ImplementationSpecific
  coreDns:
    # This PR fixes the coredns service as we use the `k8s-app: coredns` label
    service:
      selector:
        k8s-app: coredns
  grafana:
    rbac:
      pspEnabled: true
      pspUseAppArmor: false
    ingress:
      ingressClassName: nginx
  kubeStateMetrics:
    enabled: false
  nodeExporter:
    enabled: false
  prometheus-node-exporter:
    rbac:
      pspEnabled: true
  prometheus:
    prometheusSpec:
      image:
        repository: giantswarm/prometheus
    ingress:
      ingressClassName: nginx
      pathType: ImplementationSpecific
    ingressPerReplica:
      ingressClassName: nginx
      pathType: ImplementationSpecific
    thanosIngress:
      ingressClassName: nginx
      pathType: ImplementationSpecific
  prometheusOperator:
    admissionWebhooks:
      patch:
        image:
          # We have 2 images for this: https://github.com/giantswarm/retagger/blob/dc815cbec228a32d7dc1859e6e3c73bef5488b52/images.yaml#L1069 and https://github.com/giantswarm/retagger/blob/dc815cbec228a32d7dc1859e6e3c73bef5488b52/images.yaml#L513
          # The jettech one is old and does not work with Kubernetes 1.22. We need to deprecate it later.
          repository: giantswarm/ingress-nginx-kube-webhook-certgen
    alertmanagerDefaultBaseImage: giantswarm/alertmanager
    image:
      repository: giantswarm/prometheus-operator
    labels:
      giantswarm.io/monitoring_basic_sli: "true"
    prometheusConfigReloader:
      image:
        repository: giantswarm/prometheus-config-reloader
    prometheusDefaultBaseImage: giantswarm/prometheus
    networkPolicy:
      enabled: true
    secretFieldSelector: "type!=helm.sh/release.v1"
    thanosImage:
      repository: giantswarm/thanos
    verticalPodAutoscaler:
      enabled: true
  thanosRuler:
    thanosRulerSpec:
      image:
        repository: giantswarm/thanos
    ingress:
      ingressClassName: nginx
      pathType: ImplementationSpecific
