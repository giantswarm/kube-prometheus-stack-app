{{- if .Values.prometheusOperator.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "kube-prometheus-stack.fullname" . }}-operator-cleanup
  namespace: {{ template "kube-prometheus-stack.namespace" . }}
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "3"
    "helm.sh/hook-delete-policy": hook-succeeded
  labels:
    app: {{ template "kube-prometheus-stack.name" . }}-operator-cleanup
{{ include "kube-prometheus-stack.labels" . | indent 4 }}
spec:
  template:
    metadata:
      name: {{ template "kube-prometheus-stack.fullname" . }}-operator-cleanup
      labels:
        app: {{ template "kube-prometheus-stack.name" . }}-operator-cleanup
{{ include "kube-prometheus-stack.labels" . | indent 8 }}
    spec:
      serviceAccountName: {{ template "kube-prometheus-stack.operator.serviceAccountName" . }}
      containers:
        - name: kubectl
          {{- if (.Values.Installation) }}
          image: "{{ .Values.Installation.V1.Registry.Domain }}/{{ .Values.prometheusOperator.hyperkubeImage.repository }}:{{ .Values.prometheusOperator.hyperkubeImage.tag }}"
          {{ else }}
          {{- if .Values.prometheusOperator.hyperkubeImage.sha }}
          image: "{{ .Values.prometheusOperator.hyperkubeImage.repository }}:{{ .Values.prometheusOperator.hyperkubeImage.tag }}@sha256:{{ .Values.prometheusOperator.hyperkubeImage.sha }}"
          {{- else }}
          image: "{{ .Values.prometheusOperator.hyperkubeImage.repository }}:{{ .Values.prometheusOperator.hyperkubeImage.tag }}"
          {{- end }}
          {{- end }}
          imagePullPolicy: "{{ .Values.prometheusOperator.hyperkubeImage.pullPolicy }}"
          command:
          - /bin/sh
          - -c
          - >
              kubectl delete alertmanager   --all;
              kubectl delete prometheus     --all;
              kubectl delete prometheusrule --all;
              kubectl delete servicemonitor --all;
              sleep 10;
              kubectl delete crd alertmanagers.monitoring.coreos.com;
              kubectl delete crd prometheuses.monitoring.coreos.com;
              kubectl delete crd prometheusrules.monitoring.coreos.com;
              kubectl delete crd servicemonitors.monitoring.coreos.com;
              kubectl delete crd podmonitors.monitoring.coreos.com;
              kubectl delete crd thanosrulers.monitoring.coreos.com;
      restartPolicy: OnFailure
{{- end }}
